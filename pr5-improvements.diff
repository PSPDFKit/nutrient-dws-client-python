diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml
index b9de6ef..c06956a 100644
--- a/.github/workflows/ci.yml
+++ b/.github/workflows/ci.yml
@@ -58,14 +58,17 @@ jobs:
   integration-test:
     runs-on: ubuntu-latest
     if: github.event_name == 'pull_request'
+    strategy:
+      matrix:
+        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
     
     steps:
     - uses: actions/checkout@v4
 
-    - name: Set up Python 3.12
+    - name: Set up Python ${{ matrix.python-version }}
       uses: actions/setup-python@v5
       with:
-        python-version: '3.12'
+        python-version: ${{ matrix.python-version }}
 
     - name: Cache pip dependencies
       uses: actions/cache@v4
@@ -80,7 +83,17 @@ jobs:
         python -m pip install --upgrade pip
         pip install -e ".[dev]"
 
+    - name: Check for API key availability
+      run: |
+        if [ -z "${{ secrets.NUTRIENT_DWS_API_KEY }}" ]; then
+          echo "::warning::NUTRIENT_DWS_API_KEY secret not found, skipping integration tests"
+          echo "skip_tests=true" >> $GITHUB_ENV
+        else
+          echo "skip_tests=false" >> $GITHUB_ENV
+        fi
+
     - name: Create integration config with API key
+      if: env.skip_tests != 'true'
       run: |
         python -c "
         import os
@@ -91,8 +104,13 @@ jobs:
         NUTRIENT_DWS_API_KEY: ${{ secrets.NUTRIENT_DWS_API_KEY }}
 
     - name: Run integration tests
+      if: env.skip_tests != 'true'
       run: python -m pytest tests/integration/ -v
 
+    - name: Cleanup integration config
+      if: always()
+      run: rm -f tests/integration/integration_config.py
+
   build:
     runs-on: ubuntu-latest
     needs: test
diff --git a/tests/integration/test_smoke.py b/tests/integration/test_smoke.py
new file mode 100644
index 0000000..bec1e81
--- /dev/null
+++ b/tests/integration/test_smoke.py
@@ -0,0 +1,22 @@
+"""Basic smoke test to validate integration test setup."""
+
+import pytest
+
+from nutrient_dws import NutrientClient
+
+try:
+    from . import integration_config
+
+    API_KEY = integration_config.API_KEY
+except (ImportError, AttributeError):
+    API_KEY = None
+
+
+@pytest.mark.skipif(not API_KEY, reason="No API key available")
+def test_api_connection():
+    """Test that we can connect to the API."""
+    client = NutrientClient(api_key=API_KEY)
+    # Just verify client initialization works
+    assert client._api_key == API_KEY
+    assert hasattr(client, "convert_to_pdf")
+    assert hasattr(client, "build")
